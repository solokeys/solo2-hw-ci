name: ci

on:
  pull_request:
  push:
    branches:
      - dev
      - main

env:
  CARGO_INCREMENTAL: 0
  # do not set RUSTFLAGES, would overrides .cargo/config (linker script, flip-link)

jobs:
  build-lpc55:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v1
      - name: Install littlefs2-sys/micro-ecc-sys build dependencies
        shell: bash
        run: |
          env && pwd && sudo apt-get update -y -qq && sudo apt-get install -y -qq llvm libc6-dev-i386 libclang-dev clang
      - uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: "9-2020-q2"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: thumbv8m.main-none-eabi
          override: true
          components: llvm-tools-preview
      # Use precompiled binutils
      - name: cargo install cargo-binutils
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest
          use-tool-cache: true
      - name: cargo install flip-link
        uses: actions-rs/install@v0.1
        with:
          crate: flip-link
          version: latest
          use-tool-cache: true
      - name: Build firmware
        run: |
          git clone https://github.com/solokeys/solo2 && cd solo2/runners/lpc55
          cargo build --release --features board-solo2
          cargo size --release --features board-solo2
      - name: Upload Firmware
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: Firmware
          path: solo2/runners/lpc55/target/thumbv8m.main-none-eabi/release/runner
      - name: Build provision firmware
        run: |
          cd solo2/runners/lpc55
          cargo build --release --no-default-features --features board-solo2,provisioner-app,admin-app,trussed/clients-2,provisioner-app/test-attestation
          cargo size --release --no-default-features --features board-solo2,provisioner-app,admin-app,trussed/clients-2,provisioner-app/test-attestation
      - name: Upload Provisioner Firmware
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: Provisioner
          path: solo2/runners/lpc55/target/thumbv8m.main-none-eabi/release/runner


  provision-lpc55:
    needs: build-lpc55
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          name: Provisioner
          path: provisioner

      - name: Download fido2 tests
        run: |
          git clone https://github.com/solokeys/fido2-tests.git

      - name: Install python dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install -r provisioning/requirements.txt
          pip3 install -r fido2-tests/requirements.txt

      - name: Generate provisioning key material
        run: cd provisioning/key-gen && ./gen-all.sh

      - name: reboot
        run: |
          python3 control.py reboot-into-bootrom

      - name: JLinkGDBServer
        run: JLinkGDBServer -strict -device LPC55S69 -if SWD -vd -q &

      - name: Program provisioner
        run: gdb-multiarch -q -x jlink.gdb provisioner/runner &
        
      - name: Run provisioning
        run: |
          cd provisioning
          python3 provision_fido2_trussed.py key-gen/fido2/test-cert.der key-gen/fido2/test-key.pem key-gen/trussed/test-cert-p256.pem key-gen/trussed/test-key-p256.pem

      - name: Program firmware
        run: gdb-multiarch -q -x jlink.gdb provisioner/runner &
 
      - name: Run button presser
        run: while [ 1 ] ; do python3 control.py toggle-button-1 ; sleep .5 ; done &

  test-firmware-lpc55:
    needs: provision-lpc55
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          name: Firmware
          path: firmware

      - name: Download fido2 tests
        run: |
          git clone https://github.com/solokeys/fido2-tests.git

      - name: Install python dependencies
        run: |
          pip3 install -r fido2-tests/requirements.txt

      - name: reboot
        run: |
          python3 control.py reboot-into-bootrom

      - name: JLinkGDBServer
        run: JLinkGDBServer -strict -device LPC55S69 -if SWD -vd -q &

      - name: Program firmware
        run: gdb-multiarch -q -x jlink.gdb firmware/runner &
        
      - name: Run button presser
        run: while [ 1 ] ; do python3 control.py toggle-button-1 ; sleep .5 ; done &

      - name: Run fido2 tests
        run: |
          cd fido2-tests
          python3 -m pytest --vendor solobee -s -x -l -v tests/standard/ --ignore tests/standard/fido2/user_presence/
